import isel.leic.UsbPort
object HAL{


}
fun init(){
    UsbPort.write(lastOutpt)
}

var lastOutpt = 0

fun main(args: Array<String>) {
    init()
    while(true){

        val value = UsbPort.read()
        lastOutpt = value
        //UsbPort.write(value)
        //isBit(2)
        //setBits(3)
        //clrBits(7)
        writeBits(7,3)
    }
}

//read switches (bits)
fun readBits(mask:Int):Int{
    val input = UsbPort.read()
    return input and mask
}

//identify bits
fun isBit(mask:Int):Boolean{
    return UsbPort.read().and(mask) != 0
}

//define bits ("turn on" leds)
fun setBits(mask:Int){
    lastOutpt = lastOutpt.or(mask)
    UsbPort.write(lastOutpt)

}

//clear bits
fun clrBits(mask:Int){
    lastOutpt = mask.inv().and(lastOutpt)
    UsbPort.write(  lastOutpt)
}

//write the bits (value) in the place that we want
fun writeBits(mask: Int, value: Int) {
    if (mask==0)clrBits(mask)
    setBits(value)
}